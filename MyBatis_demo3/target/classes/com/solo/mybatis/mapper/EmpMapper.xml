<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.solo.mybatis.mapper.EmpMapper">

    <!--
        resultMap: 设置自定义映射关系
        id: 唯一标识, 不能重复
        type: 设置映射关系中的实体类类型
        子标签:
        id: 设置主键的元素关系
        result: 设置普通字段的映射关系
        属性:
        property: 设置映射关系中的属性名，必须是type属性所设置的实体类类型中的属性名
        column: 设置映射关系中的字段名，必须是sql语句中查出的字段名
    -->
    <resultMap id="empResultMap" type="Emp">
        <id property="eid" column="eid" />
        <result property="empName" column="emp_name"/>
        <result property="age" column="age"/>
        <result property="sex" column="sex"/>
        <result property="email" column="email"/>
    </resultMap>

    <!-- 处理多对一映射关系方式一：级联属性赋值 -->
    <resultMap id="empAndDeptResultMapOne" type="Emp">
        <id property="eid" column="eid" />
        <result property="empName" column="emp_name"/>
        <result property="age" column="age"/>
        <result property="sex" column="sex"/>
        <result property="email" column="email"/>
        <result property="dept.did" column="did"/>
        <result property="dept.deptName" column="dept_name"/>
    </resultMap>

    <resultMap id="empAndDeptResultMapTwo" type="Emp">
        <id property="eid" column="eid" />
        <result property="empName" column="emp_name"/>
        <result property="age" column="age"/>
        <result property="sex" column="sex"/>
        <result property="email" column="email"/>
        <!--
            association: 处理多对一的映射关系
            property: 需要处理的多对一关系的属性名
            javaType: 该属性的类型
        -->
        <association property="dept" javaType="com.solo.mybatis.pojo.Dept">
            <id property="did" column="did"></id>
            <result property="deptName" column="dept_name"></result>
        </association>
    </resultMap>
    
    <!--  设置字段别名 emp_name -> empName  -->
    <select id="getAllEmpOld" resultType="Emp">
        SELECT
        eid, emp_name, age, sex, email
        FROM
        t_emp
    </select>

    <!-- resultMap 写某个<resultMap>标签的Id -->
    <select id="getAllEmp" resultMap="empResultMap">
        SELECT
        eid, emp_name, age, sex, email
        FROM
        t_emp
    </select>

    <select id="getEmpAndDept" resultMap="empAndDeptResultMapTwo">
        SELECT
        *
        FROM
        t_emp
        LEFT
        JOIN
        t_dept
        ON
        t_emp.did = t_dept.did
        WHERE
        t_emp.eid = #{eid}
    </select>


    <resultMap id="getEmpAndDeptByStepResultMap" type="Emp">
        <id property="eid" column="eid" />
        <result property="empName" column="emp_name"/>
        <result property="age" column="age"/>
        <result property="sex" column="sex"/>
        <result property="email" column="email"/>
        <!--
            select:设置分步查询的sql的唯一标识(nameSpace.SQLId 或 mapper接口的全类名.方法名)
            column:设置分步查询的条件
            fetchType: 当开启了全局的延迟加载之后，可以设置该属性达到延迟加载的效果
            fetchType="lazy 延迟加载|eager 立即加载" 默认延迟加载
        -->
        <association property="dept"
                     select="com.solo.mybatis.mapper.DeptMapper.getEmpAndDeptByStepTwo"
                     column="did"
                     fetchType="lazy"></association>
    </resultMap>
    <select id="getEmpAndDeptByStepOne" resultMap="getEmpAndDeptByStepResultMap">
        SELECT
        *
        FROM
        t_emp
        WHERE
        eid = #{eid}#
    </select>

    <select id="getDeptAndEmpByStepTwo" resultType="Emp">
        SELECT
        *
        FROM
        t_emp
        WHERE
        did = #{did}
    </select>

</mapper>